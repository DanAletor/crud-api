name: Deploy Serverless Node.js Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the latest code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Configure AWS credentials using GitHub secrets
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      # Install Node.js dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Lint the code for style issues
      - name: Lint Code
        run: |
          npm install --save-dev eslint
          npx eslint . --ignore-path .gitignore || true

      # Install AWS SAM CLI for deployment
      - name: Install AWS SAM CLI
        run: |
          pip install aws-sam-cli

      # Deploy the application using AWS SAM
      - name: Deploy to AWS SAM Stack
        run: |
          sam deploy \
            --stack-name sam-app \
            --region eu-west-3 \
            --no-confirm-changeset \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --no-fail-on-empty-changeset

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      # Checkout the latest code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Make the post-deployment test script executable
      - name: Make post-deployment test script executable
        run: |
          chmod +x ./post_deploy_test.sh

      # Run post-deployment tests
      - name: Run Post-Deployment Tests
        run: |
          export ENDPOINT=${{ secrets.ENDPOINT }}
          ./post_deploy_test.sh

  rollback:
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    steps:
      # Checkout the latest code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Rollback to the last successful commit if the deployment failed
      - name: Rollback to Previous Commit
        run: |
          echo "Rolling back to the last successful commit"
          git reset --hard HEAD~1 
          git push origin main --force  
